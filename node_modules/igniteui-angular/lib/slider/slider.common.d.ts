/**
 * Template directive that allows you to set a custom template representing the lower label value of the {@link IgxSliderComponent}
 *
 *```html
 * <igx-slider>
 *  <ng-template igxSliderThumbFrom let-value let-labels>{{value}}</ng-template>
 * </igx-slider>
 * ```
 *
 * @context {@link IgxSliderComponent.context}
 */
import * as ɵngcc0 from '@angular/core';
export declare class IgxThumbFromTemplateDirective {
    static ɵfac: ɵngcc0.ɵɵFactoryDef<IgxThumbFromTemplateDirective, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<IgxThumbFromTemplateDirective, "[igxSliderThumbFrom]", never, {}, {}, never>;
}
/**
 * Template directive that allows you to set a custom template representing the upper label value of the {@link IgxSliderComponent}
 *
 * ```html
 * <igx-slider>
 *  <ng-template igxSliderThumbTo let-value let-labels>{{value}}</ng-template>
 * </igx-slider>
 * ```
 *
 * @context {@link IgxSliderComponent.context}
 */
export declare class IgxThumbToTemplateDirective {
    static ɵfac: ɵngcc0.ɵɵFactoryDef<IgxThumbToTemplateDirective, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<IgxThumbToTemplateDirective, "[igxSliderThumbTo]", never, {}, {}, never>;
}
/**
 * Template directive that allows you to set a custom template, represeting primary/secondary tick labels of the {@link IgxSliderComponent}
 *
 * @context {@link IgxTicksComponent.context}
 */
export declare class IgxTickLabelTemplateDirective {
    static ɵfac: ɵngcc0.ɵɵFactoryDef<IgxTickLabelTemplateDirective, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<IgxTickLabelTemplateDirective, "[igxSliderTickLabel]", never, {}, {}, never>;
}
export interface IRangeSliderValue {
    lower: number;
    upper: number;
}
export interface ISliderValueChangeEventArgs {
    oldValue: number | IRangeSliderValue;
    value: number | IRangeSliderValue;
}
export declare enum IgxSliderType {
    /**
     * Slider with single thumb.
     */
    SLIDER = 0,
    /**
     *  Range slider with multiple thumbs, that can mark the range.
     */
    RANGE = 1
}
export declare enum SliderHandle {
    FROM = 0,
    TO = 1
}
/**
 * Slider Tick labels Orientation
 */
export declare enum TickLabelsOrientation {
    Horizontal = 0,
    TopToBottom = 1,
    BottomToTop = 2
}
/**
 * Slider Ticks orientation
 */
export declare enum TicksOrientation {
    Top = 0,
    Bottom = 1,
    Mirror = 2
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2xpZGVyLmNvbW1vbi5kLnRzIiwic291cmNlcyI6WyJzbGlkZXIuY29tbW9uLmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTs7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFRlbXBsYXRlIGRpcmVjdGl2ZSB0aGF0IGFsbG93cyB5b3UgdG8gc2V0IGEgY3VzdG9tIHRlbXBsYXRlIHJlcHJlc2VudGluZyB0aGUgbG93ZXIgbGFiZWwgdmFsdWUgb2YgdGhlIHtAbGluayBJZ3hTbGlkZXJDb21wb25lbnR9XG4gKlxuICpgYGBodG1sXG4gKiA8aWd4LXNsaWRlcj5cbiAqICA8bmctdGVtcGxhdGUgaWd4U2xpZGVyVGh1bWJGcm9tIGxldC12YWx1ZSBsZXQtbGFiZWxzPnt7dmFsdWV9fTwvbmctdGVtcGxhdGU+XG4gKiA8L2lneC1zbGlkZXI+XG4gKiBgYGBcbiAqXG4gKiBAY29udGV4dCB7QGxpbmsgSWd4U2xpZGVyQ29tcG9uZW50LmNvbnRleHR9XG4gKi9cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIElneFRodW1iRnJvbVRlbXBsYXRlRGlyZWN0aXZlIHtcbn1cbi8qKlxuICogVGVtcGxhdGUgZGlyZWN0aXZlIHRoYXQgYWxsb3dzIHlvdSB0byBzZXQgYSBjdXN0b20gdGVtcGxhdGUgcmVwcmVzZW50aW5nIHRoZSB1cHBlciBsYWJlbCB2YWx1ZSBvZiB0aGUge0BsaW5rIElneFNsaWRlckNvbXBvbmVudH1cbiAqXG4gKiBgYGBodG1sXG4gKiA8aWd4LXNsaWRlcj5cbiAqICA8bmctdGVtcGxhdGUgaWd4U2xpZGVyVGh1bWJUbyBsZXQtdmFsdWUgbGV0LWxhYmVscz57e3ZhbHVlfX08L25nLXRlbXBsYXRlPlxuICogPC9pZ3gtc2xpZGVyPlxuICogYGBgXG4gKlxuICogQGNvbnRleHQge0BsaW5rIElneFNsaWRlckNvbXBvbmVudC5jb250ZXh0fVxuICovXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBJZ3hUaHVtYlRvVGVtcGxhdGVEaXJlY3RpdmUge1xufVxuLyoqXG4gKiBUZW1wbGF0ZSBkaXJlY3RpdmUgdGhhdCBhbGxvd3MgeW91IHRvIHNldCBhIGN1c3RvbSB0ZW1wbGF0ZSwgcmVwcmVzZXRpbmcgcHJpbWFyeS9zZWNvbmRhcnkgdGljayBsYWJlbHMgb2YgdGhlIHtAbGluayBJZ3hTbGlkZXJDb21wb25lbnR9XG4gKlxuICogQGNvbnRleHQge0BsaW5rIElneFRpY2tzQ29tcG9uZW50LmNvbnRleHR9XG4gKi9cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIElneFRpY2tMYWJlbFRlbXBsYXRlRGlyZWN0aXZlIHtcbn1cbmV4cG9ydCBpbnRlcmZhY2UgSVJhbmdlU2xpZGVyVmFsdWUge1xuICAgIGxvd2VyOiBudW1iZXI7XG4gICAgdXBwZXI6IG51bWJlcjtcbn1cbmV4cG9ydCBpbnRlcmZhY2UgSVNsaWRlclZhbHVlQ2hhbmdlRXZlbnRBcmdzIHtcbiAgICBvbGRWYWx1ZTogbnVtYmVyIHwgSVJhbmdlU2xpZGVyVmFsdWU7XG4gICAgdmFsdWU6IG51bWJlciB8IElSYW5nZVNsaWRlclZhbHVlO1xufVxuZXhwb3J0IGRlY2xhcmUgZW51bSBJZ3hTbGlkZXJUeXBlIHtcbiAgICAvKipcbiAgICAgKiBTbGlkZXIgd2l0aCBzaW5nbGUgdGh1bWIuXG4gICAgICovXG4gICAgU0xJREVSID0gMCxcbiAgICAvKipcbiAgICAgKiAgUmFuZ2Ugc2xpZGVyIHdpdGggbXVsdGlwbGUgdGh1bWJzLCB0aGF0IGNhbiBtYXJrIHRoZSByYW5nZS5cbiAgICAgKi9cbiAgICBSQU5HRSA9IDFcbn1cbmV4cG9ydCBkZWNsYXJlIGVudW0gU2xpZGVySGFuZGxlIHtcbiAgICBGUk9NID0gMCxcbiAgICBUTyA9IDFcbn1cbi8qKlxuICogU2xpZGVyIFRpY2sgbGFiZWxzIE9yaWVudGF0aW9uXG4gKi9cbmV4cG9ydCBkZWNsYXJlIGVudW0gVGlja0xhYmVsc09yaWVudGF0aW9uIHtcbiAgICBIb3Jpem9udGFsID0gMCxcbiAgICBUb3BUb0JvdHRvbSA9IDEsXG4gICAgQm90dG9tVG9Ub3AgPSAyXG59XG4vKipcbiAqIFNsaWRlciBUaWNrcyBvcmllbnRhdGlvblxuICovXG5leHBvcnQgZGVjbGFyZSBlbnVtIFRpY2tzT3JpZW50YXRpb24ge1xuICAgIFRvcCA9IDAsXG4gICAgQm90dG9tID0gMSxcbiAgICBNaXJyb3IgPSAyXG59XG4iXX0=