import { GridBaseAPIService } from '../api.service';
import { IgxGridComponent } from './grid.component';
import { IGroupByRecord } from '../../data-operations/groupby-record.interface';
import { IGroupByExpandState } from '../../data-operations/groupby-expand-state.interface';
import { IGroupingExpression } from '../../data-operations/grouping-expression.interface';
import * as ɵngcc0 from '@angular/core';
export declare class IgxGridAPIService extends GridBaseAPIService<IgxGridComponent> {
    groupBy(expression: IGroupingExpression): void;
    groupBy_multiple(expressions: IGroupingExpression[]): void;
    clear_groupby(name?: string | Array<string>): void;
    groupBy_get_expanded_for_group(groupRow: IGroupByRecord): IGroupByExpandState;
    groupBy_is_row_in_group(groupRow: IGroupByRecord, rowID: any): boolean;
    groupBy_toggle_group(groupRow: IGroupByRecord): void;
    groupBy_fully_expand_group(groupRow: IGroupByRecord): void;
    protected remove_grouping_expression(fieldName: any): void;
    arrange_sorting_expressions(): void;
    get_groupBy_record_id(gRow: IGroupByRecord): string;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<IgxGridAPIService, never>;
    static ɵprov: ɵngcc0.ɵɵInjectableDef<IgxGridAPIService>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ3JpZC1hcGkuc2VydmljZS5kLnRzIiwic291cmNlcyI6WyJncmlkLWFwaS5zZXJ2aWNlLmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEdyaWRCYXNlQVBJU2VydmljZSB9IGZyb20gJy4uL2FwaS5zZXJ2aWNlJztcbmltcG9ydCB7IElneEdyaWRDb21wb25lbnQgfSBmcm9tICcuL2dyaWQuY29tcG9uZW50JztcbmltcG9ydCB7IElHcm91cEJ5UmVjb3JkIH0gZnJvbSAnLi4vLi4vZGF0YS1vcGVyYXRpb25zL2dyb3VwYnktcmVjb3JkLmludGVyZmFjZSc7XG5pbXBvcnQgeyBJR3JvdXBCeUV4cGFuZFN0YXRlIH0gZnJvbSAnLi4vLi4vZGF0YS1vcGVyYXRpb25zL2dyb3VwYnktZXhwYW5kLXN0YXRlLmludGVyZmFjZSc7XG5pbXBvcnQgeyBJR3JvdXBpbmdFeHByZXNzaW9uIH0gZnJvbSAnLi4vLi4vZGF0YS1vcGVyYXRpb25zL2dyb3VwaW5nLWV4cHJlc3Npb24uaW50ZXJmYWNlJztcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIElneEdyaWRBUElTZXJ2aWNlIGV4dGVuZHMgR3JpZEJhc2VBUElTZXJ2aWNlPElneEdyaWRDb21wb25lbnQ+IHtcbiAgICBncm91cEJ5KGV4cHJlc3Npb246IElHcm91cGluZ0V4cHJlc3Npb24pOiB2b2lkO1xuICAgIGdyb3VwQnlfbXVsdGlwbGUoZXhwcmVzc2lvbnM6IElHcm91cGluZ0V4cHJlc3Npb25bXSk6IHZvaWQ7XG4gICAgY2xlYXJfZ3JvdXBieShuYW1lPzogc3RyaW5nIHwgQXJyYXk8c3RyaW5nPik6IHZvaWQ7XG4gICAgZ3JvdXBCeV9nZXRfZXhwYW5kZWRfZm9yX2dyb3VwKGdyb3VwUm93OiBJR3JvdXBCeVJlY29yZCk6IElHcm91cEJ5RXhwYW5kU3RhdGU7XG4gICAgZ3JvdXBCeV9pc19yb3dfaW5fZ3JvdXAoZ3JvdXBSb3c6IElHcm91cEJ5UmVjb3JkLCByb3dJRDogYW55KTogYm9vbGVhbjtcbiAgICBncm91cEJ5X3RvZ2dsZV9ncm91cChncm91cFJvdzogSUdyb3VwQnlSZWNvcmQpOiB2b2lkO1xuICAgIGdyb3VwQnlfZnVsbHlfZXhwYW5kX2dyb3VwKGdyb3VwUm93OiBJR3JvdXBCeVJlY29yZCk6IHZvaWQ7XG4gICAgcHJvdGVjdGVkIHJlbW92ZV9ncm91cGluZ19leHByZXNzaW9uKGZpZWxkTmFtZTogYW55KTogdm9pZDtcbiAgICBhcnJhbmdlX3NvcnRpbmdfZXhwcmVzc2lvbnMoKTogdm9pZDtcbiAgICBnZXRfZ3JvdXBCeV9yZWNvcmRfaWQoZ1JvdzogSUdyb3VwQnlSZWNvcmQpOiBzdHJpbmc7XG59XG4iXX0=