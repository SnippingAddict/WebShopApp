import { QueryList, ElementRef, ChangeDetectorRef, DoCheck } from '@angular/core';
import { IgxSummaryResult } from './grid-summary';
import { IgxSummaryCellComponent } from './summary-cell.component';
import { IgxGridForOfDirective } from '../../directives/for-of/for_of.directive';
import { GridBaseAPIService } from '../api.service';
import { IgxGridBaseDirective } from '../grid-base.directive';
import { IgxColumnComponent } from '../columns/column.component';
import { GridType } from '../common/grid.interface';
import * as ɵngcc0 from '@angular/core';
export declare class IgxSummaryRowComponent implements DoCheck {
    gridAPI: GridBaseAPIService<IgxGridBaseDirective & GridType>;
    element: ElementRef;
    cdr: ChangeDetectorRef;
    summaries: Map<string, IgxSummaryResult[]>;
    gridID: any;
    index: number;
    firstCellIndentation: number;
    get dataRowIndex(): number;
    get minHeight(): number;
    summaryCells: QueryList<IgxSummaryCellComponent>;
    /**
     * @hidden
     */
    virtDirRow: IgxGridForOfDirective<any>;
    constructor(gridAPI: GridBaseAPIService<IgxGridBaseDirective & GridType>, element: ElementRef, cdr: ChangeDetectorRef);
    ngDoCheck(): void;
    get grid(): IgxGridBaseDirective & GridType;
    get nativeElement(): any;
    getColumnSummaries(columnName: any): IgxSummaryResult[];
    /**
     * @hidden
     */
    get pinnedColumns(): IgxColumnComponent[];
    /**
     * @hidden
     */
    get unpinnedColumns(): IgxColumnComponent[];
    static ɵfac: ɵngcc0.ɵɵFactoryDef<IgxSummaryRowComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<IgxSummaryRowComponent, "igx-grid-summary-row", never, { "firstCellIndentation": "firstCellIndentation"; "summaries": "summaries"; "gridID": "gridID"; "index": "index"; }, {}, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3VtbWFyeS1yb3cuY29tcG9uZW50LmQudHMiLCJzb3VyY2VzIjpbInN1bW1hcnktcm93LmNvbXBvbmVudC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUXVlcnlMaXN0LCBFbGVtZW50UmVmLCBDaGFuZ2VEZXRlY3RvclJlZiwgRG9DaGVjayB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgSWd4U3VtbWFyeVJlc3VsdCB9IGZyb20gJy4vZ3JpZC1zdW1tYXJ5JztcbmltcG9ydCB7IElneFN1bW1hcnlDZWxsQ29tcG9uZW50IH0gZnJvbSAnLi9zdW1tYXJ5LWNlbGwuY29tcG9uZW50JztcbmltcG9ydCB7IElneEdyaWRGb3JPZkRpcmVjdGl2ZSB9IGZyb20gJy4uLy4uL2RpcmVjdGl2ZXMvZm9yLW9mL2Zvcl9vZi5kaXJlY3RpdmUnO1xuaW1wb3J0IHsgR3JpZEJhc2VBUElTZXJ2aWNlIH0gZnJvbSAnLi4vYXBpLnNlcnZpY2UnO1xuaW1wb3J0IHsgSWd4R3JpZEJhc2VEaXJlY3RpdmUgfSBmcm9tICcuLi9ncmlkLWJhc2UuZGlyZWN0aXZlJztcbmltcG9ydCB7IElneENvbHVtbkNvbXBvbmVudCB9IGZyb20gJy4uL2NvbHVtbnMvY29sdW1uLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBHcmlkVHlwZSB9IGZyb20gJy4uL2NvbW1vbi9ncmlkLmludGVyZmFjZSc7XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBJZ3hTdW1tYXJ5Um93Q29tcG9uZW50IGltcGxlbWVudHMgRG9DaGVjayB7XG4gICAgZ3JpZEFQSTogR3JpZEJhc2VBUElTZXJ2aWNlPElneEdyaWRCYXNlRGlyZWN0aXZlICYgR3JpZFR5cGU+O1xuICAgIGVsZW1lbnQ6IEVsZW1lbnRSZWY7XG4gICAgY2RyOiBDaGFuZ2VEZXRlY3RvclJlZjtcbiAgICBzdW1tYXJpZXM6IE1hcDxzdHJpbmcsIElneFN1bW1hcnlSZXN1bHRbXT47XG4gICAgZ3JpZElEOiBhbnk7XG4gICAgaW5kZXg6IG51bWJlcjtcbiAgICBmaXJzdENlbGxJbmRlbnRhdGlvbjogbnVtYmVyO1xuICAgIGdldCBkYXRhUm93SW5kZXgoKTogbnVtYmVyO1xuICAgIGdldCBtaW5IZWlnaHQoKTogbnVtYmVyO1xuICAgIHN1bW1hcnlDZWxsczogUXVlcnlMaXN0PElneFN1bW1hcnlDZWxsQ29tcG9uZW50PjtcbiAgICAvKipcbiAgICAgKiBAaGlkZGVuXG4gICAgICovXG4gICAgdmlydERpclJvdzogSWd4R3JpZEZvck9mRGlyZWN0aXZlPGFueT47XG4gICAgY29uc3RydWN0b3IoZ3JpZEFQSTogR3JpZEJhc2VBUElTZXJ2aWNlPElneEdyaWRCYXNlRGlyZWN0aXZlICYgR3JpZFR5cGU+LCBlbGVtZW50OiBFbGVtZW50UmVmLCBjZHI6IENoYW5nZURldGVjdG9yUmVmKTtcbiAgICBuZ0RvQ2hlY2soKTogdm9pZDtcbiAgICBnZXQgZ3JpZCgpOiBJZ3hHcmlkQmFzZURpcmVjdGl2ZSAmIEdyaWRUeXBlO1xuICAgIGdldCBuYXRpdmVFbGVtZW50KCk6IGFueTtcbiAgICBnZXRDb2x1bW5TdW1tYXJpZXMoY29sdW1uTmFtZTogYW55KTogSWd4U3VtbWFyeVJlc3VsdFtdO1xuICAgIC8qKlxuICAgICAqIEBoaWRkZW5cbiAgICAgKi9cbiAgICBnZXQgcGlubmVkQ29sdW1ucygpOiBJZ3hDb2x1bW5Db21wb25lbnRbXTtcbiAgICAvKipcbiAgICAgKiBAaGlkZGVuXG4gICAgICovXG4gICAgZ2V0IHVucGlubmVkQ29sdW1ucygpOiBJZ3hDb2x1bW5Db21wb25lbnRbXTtcbn1cbiJdfQ==