import { EventEmitter } from '@angular/core';
import { IgxCalendarComponent } from '../calendar';
import { InteractionMode } from '../core/enums';
import { IgxDatePickerActionsDirective } from './date-picker.directives';
/**
 * @hidden
 */
import * as ɵngcc0 from '@angular/core';
export declare class IgxCalendarContainerComponent {
    calendar: IgxCalendarComponent;
    mode: InteractionMode;
    vertical: boolean;
    cancelButtonLabel: string;
    todayButtonLabel: string;
    datePickerActions: IgxDatePickerActionsDirective;
    onClose: EventEmitter<any>;
    onTodaySelection: EventEmitter<any>;
    styleClass: string;
    get dropdownCSS(): boolean;
    get verticalCSS(): boolean;
    onEscape(event: any): void;
    /**
     * Returns whether the date-picker is in readonly dialog mode.
     *
     * @hidden
    */
    get isReadonly(): boolean;
    /**
     * Emits close event for the calendar.
     */
    closeCalendar(): void;
    /**
    * Emits today selection event for the calendar.
    */
    triggerTodaySelection(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<IgxCalendarContainerComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<IgxCalendarContainerComponent, "igx-calendar-container", never, { "mode": "mode"; "vertical": "vertical"; "cancelButtonLabel": "cancelButtonLabel"; "todayButtonLabel": "todayButtonLabel"; "datePickerActions": "datePickerActions"; }, { "onClose": "onClose"; "onTodaySelection": "onTodaySelection"; }, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FsZW5kYXItY29udGFpbmVyLmNvbXBvbmVudC5kLnRzIiwic291cmNlcyI6WyJjYWxlbmRhci1jb250YWluZXIuY29tcG9uZW50LmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEV2ZW50RW1pdHRlciB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgSWd4Q2FsZW5kYXJDb21wb25lbnQgfSBmcm9tICcuLi9jYWxlbmRhcic7XG5pbXBvcnQgeyBJbnRlcmFjdGlvbk1vZGUgfSBmcm9tICcuLi9jb3JlL2VudW1zJztcbmltcG9ydCB7IElneERhdGVQaWNrZXJBY3Rpb25zRGlyZWN0aXZlIH0gZnJvbSAnLi9kYXRlLXBpY2tlci5kaXJlY3RpdmVzJztcbi8qKlxuICogQGhpZGRlblxuICovXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBJZ3hDYWxlbmRhckNvbnRhaW5lckNvbXBvbmVudCB7XG4gICAgY2FsZW5kYXI6IElneENhbGVuZGFyQ29tcG9uZW50O1xuICAgIG1vZGU6IEludGVyYWN0aW9uTW9kZTtcbiAgICB2ZXJ0aWNhbDogYm9vbGVhbjtcbiAgICBjYW5jZWxCdXR0b25MYWJlbDogc3RyaW5nO1xuICAgIHRvZGF5QnV0dG9uTGFiZWw6IHN0cmluZztcbiAgICBkYXRlUGlja2VyQWN0aW9uczogSWd4RGF0ZVBpY2tlckFjdGlvbnNEaXJlY3RpdmU7XG4gICAgb25DbG9zZTogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgb25Ub2RheVNlbGVjdGlvbjogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgc3R5bGVDbGFzczogc3RyaW5nO1xuICAgIGdldCBkcm9wZG93bkNTUygpOiBib29sZWFuO1xuICAgIGdldCB2ZXJ0aWNhbENTUygpOiBib29sZWFuO1xuICAgIG9uRXNjYXBlKGV2ZW50OiBhbnkpOiB2b2lkO1xuICAgIC8qKlxuICAgICAqIFJldHVybnMgd2hldGhlciB0aGUgZGF0ZS1waWNrZXIgaXMgaW4gcmVhZG9ubHkgZGlhbG9nIG1vZGUuXG4gICAgICpcbiAgICAgKiBAaGlkZGVuXG4gICAgKi9cbiAgICBnZXQgaXNSZWFkb25seSgpOiBib29sZWFuO1xuICAgIC8qKlxuICAgICAqIEVtaXRzIGNsb3NlIGV2ZW50IGZvciB0aGUgY2FsZW5kYXIuXG4gICAgICovXG4gICAgY2xvc2VDYWxlbmRhcigpOiB2b2lkO1xuICAgIC8qKlxuICAgICogRW1pdHMgdG9kYXkgc2VsZWN0aW9uIGV2ZW50IGZvciB0aGUgY2FsZW5kYXIuXG4gICAgKi9cbiAgICB0cmlnZ2VyVG9kYXlTZWxlY3Rpb24oKTogdm9pZDtcbn1cbiJdfQ==