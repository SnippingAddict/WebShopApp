import { Injector, NgModuleFactory, OnChanges, OnDestroy, SimpleChanges, Type, ViewContainerRef } from '@angular/core';
import { ShowcaseItem } from '../interfaces/showcase-item';
import { CartItem } from '../classes/cart-item';
/**
 * A directive to create dynamic item components for the showcase component
 * @ignore
 */
import * as ɵngcc0 from '@angular/core';
export declare class ShowcaseOutletDirective implements OnChanges, OnDestroy {
    viewContainerRef: ViewContainerRef;
    /**
     * The component to render
     */
    cartShowcaseOutlet: Type<ShowcaseItem>;
    /**
     * The injector of the selected component
     */
    cartShowcaseOutletInjector: Injector;
    /**
     * The module factory of the selected component
     */
    cartShowcaseOutletNgModuleFactory: NgModuleFactory<any>;
    /**
     * The CartItem information to pass into the component
     */
    cartShowcaseOutletItem: CartItem;
    /**
     * The locale format received from the parent component
     */
    cartShowcaseOutletFormat: string;
    private _componentRef;
    private _moduleRef;
    constructor(viewContainerRef: ViewContainerRef);
    private cleanModule();
    ngOnChanges(changes: SimpleChanges): void;
    ngOnDestroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ShowcaseOutletDirective, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<ShowcaseOutletDirective, "[cartShowcaseOutlet]", never, { "cartShowcaseOutlet": "cartShowcaseOutlet"; "cartShowcaseOutletInjector": "cartShowcaseOutletInjector"; "cartShowcaseOutletNgModuleFactory": "cartShowcaseOutletNgModuleFactory"; "cartShowcaseOutletItem": "cartShowcaseOutletItem"; "cartShowcaseOutletFormat": "cartShowcaseOutletFormat"; }, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2hvd2Nhc2Utb3V0bGV0LmQudHMiLCJzb3VyY2VzIjpbInNob3djYXNlLW91dGxldC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdG9yLCBOZ01vZHVsZUZhY3RvcnksIE9uQ2hhbmdlcywgT25EZXN0cm95LCBTaW1wbGVDaGFuZ2VzLCBUeXBlLCBWaWV3Q29udGFpbmVyUmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IFNob3djYXNlSXRlbSB9IGZyb20gJy4uL2ludGVyZmFjZXMvc2hvd2Nhc2UtaXRlbSc7XHJcbmltcG9ydCB7IENhcnRJdGVtIH0gZnJvbSAnLi4vY2xhc3Nlcy9jYXJ0LWl0ZW0nO1xyXG4vKipcclxuICogQSBkaXJlY3RpdmUgdG8gY3JlYXRlIGR5bmFtaWMgaXRlbSBjb21wb25lbnRzIGZvciB0aGUgc2hvd2Nhc2UgY29tcG9uZW50XHJcbiAqIEBpZ25vcmVcclxuICovXHJcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIFNob3djYXNlT3V0bGV0RGlyZWN0aXZlIGltcGxlbWVudHMgT25DaGFuZ2VzLCBPbkRlc3Ryb3kge1xyXG4gICAgdmlld0NvbnRhaW5lclJlZjogVmlld0NvbnRhaW5lclJlZjtcclxuICAgIC8qKlxyXG4gICAgICogVGhlIGNvbXBvbmVudCB0byByZW5kZXJcclxuICAgICAqL1xyXG4gICAgY2FydFNob3djYXNlT3V0bGV0OiBUeXBlPFNob3djYXNlSXRlbT47XHJcbiAgICAvKipcclxuICAgICAqIFRoZSBpbmplY3RvciBvZiB0aGUgc2VsZWN0ZWQgY29tcG9uZW50XHJcbiAgICAgKi9cclxuICAgIGNhcnRTaG93Y2FzZU91dGxldEluamVjdG9yOiBJbmplY3RvcjtcclxuICAgIC8qKlxyXG4gICAgICogVGhlIG1vZHVsZSBmYWN0b3J5IG9mIHRoZSBzZWxlY3RlZCBjb21wb25lbnRcclxuICAgICAqL1xyXG4gICAgY2FydFNob3djYXNlT3V0bGV0TmdNb2R1bGVGYWN0b3J5OiBOZ01vZHVsZUZhY3Rvcnk8YW55PjtcclxuICAgIC8qKlxyXG4gICAgICogVGhlIENhcnRJdGVtIGluZm9ybWF0aW9uIHRvIHBhc3MgaW50byB0aGUgY29tcG9uZW50XHJcbiAgICAgKi9cclxuICAgIGNhcnRTaG93Y2FzZU91dGxldEl0ZW06IENhcnRJdGVtO1xyXG4gICAgLyoqXHJcbiAgICAgKiBUaGUgbG9jYWxlIGZvcm1hdCByZWNlaXZlZCBmcm9tIHRoZSBwYXJlbnQgY29tcG9uZW50XHJcbiAgICAgKi9cclxuICAgIGNhcnRTaG93Y2FzZU91dGxldEZvcm1hdDogc3RyaW5nO1xyXG4gICAgcHJpdmF0ZSBfY29tcG9uZW50UmVmO1xyXG4gICAgcHJpdmF0ZSBfbW9kdWxlUmVmO1xyXG4gICAgY29uc3RydWN0b3Iodmlld0NvbnRhaW5lclJlZjogVmlld0NvbnRhaW5lclJlZik7XHJcbiAgICBwcml2YXRlIGNsZWFuTW9kdWxlKCk7XHJcbiAgICBuZ09uQ2hhbmdlcyhjaGFuZ2VzOiBTaW1wbGVDaGFuZ2VzKTogdm9pZDtcclxuICAgIG5nT25EZXN0cm95KCk6IHZvaWQ7XHJcbn1cclxuIl19